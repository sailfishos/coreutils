From 584f05cbaf6e7624b9b47a2c7c435da213b76177 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tomi=20Lepp=C3=A4nen?= <tomi.leppanen@jolla.com>
Date: Tue, 11 Feb 2020 17:15:41 +0200
Subject: [PATCH] Do not fail on ENOENT on sb2

See the WARNING comment in the code and also upstream commit
50c1199e099a8cf91418f1c91bcfafe970878dd9.

We should fix this in sb2.

---
 src/copy.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/copy.c b/src/copy.c
index dc1f6d0fa..0e9540d3f 100644
--- a/src/copy.c
+++ b/src/copy.c
@@ -2427,7 +2427,7 @@ copy_internal (char const *src_name, char const *dst_name,
          where you'd replace '18' with the integer in parentheses that
          was output from the perl one-liner above.
          If necessary, of course, change '/tmp' to some other directory.  */
-      if (rename_errno != EXDEV)
+      if (rename_errno != EXDEV && rename_errno != ENOENT)
         {
           /* There are many ways this can happen due to a race condition.
              When something happens between the initial XSTAT and the
-- 
2.24.1

